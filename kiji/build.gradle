plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.ksp)
    id("kotlin-parcelize")
}

android {
    namespace("dev.kiji")

    defaultConfig {
        applicationId "dev.kiji"
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            keyAlias "debug"
            keyPassword "android"
            storeFile file("debug.jks")
            storePassword "android"
        }

        debug {
            keyAlias "debug"
            keyPassword "android"
            storeFile file("debug.jks")
            storePassword "android"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.jetpack.compose.compiler.get()
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation(project(":core:network"))

    implementation(project(":data:hackernews-interface"))
    implementation(project(":data:hackernews-impl"))

    implementation(project(":data:common-interface"))
    implementation(project(":data:common-impl"))

    implementation(libs.androidx.core)
    implementation(libs.androidx.activity)
    implementation(libs.androidx.material)
    implementation(libs.androidx.lifecycle.runtime)
    implementation(libs.androidx.lifecycle.process)
    implementation(libs.androidx.datastore.preferences.core)
    implementation(libs.androidx.navigation.compose)
    implementation(libs.androidx.constraintlayout.compose)
    implementation("androidx.work:work-runtime-ktx:2.8.1")

    implementation(libs.androidx.room.paging)

    //region Jetpack Compose UI
    implementation(platform(libs.compose.bom))

    implementation(libs.compose.ui)
    implementation(libs.compose.preview)
    implementation(libs.compose.material)
    implementation(libs.compose.activity)
    implementation(libs.compose.viewmodel)
    implementation(libs.compose.paging)

    implementation(libs.accompanist.insets)
    implementation(libs.accompanist.insets.ui)
    implementation(libs.accompanist.systemuicontroller)
    implementation(libs.accompanist.placeholder.material)
    implementation(libs.accompanist.pager.indicators)
    //endregion

    implementation(libs.coil)
    implementation(libs.coil.svg)
    implementation(libs.coil.compose)

    //region Square OSS
    implementation(libs.retrofit)
    implementation(libs.retrofit.converter.moshi)

    implementation(libs.moshi.core)
    implementation(libs.moshi.adapters)
    ksp(libs.moshi.codegen)

    implementation(platform(libs.okhttp.bom))
    implementation(libs.okhttp.core)
    implementation(libs.okhttp.logging.interceptor)
    //endregion

    implementation("androidx.webkit:webkit:1.6.1")
    implementation("androidx.browser:browser:1.5.0")
    implementation("io.github.aakira:napier:2.6.1")

    testImplementation(libs.test.junit.core)
    androidTestImplementation(libs.test.androidx.junit)
    androidTestImplementation(libs.test.androidx.espresso.core)
    androidTestImplementation(libs.test.compose.ui.junit)
    debugImplementation(libs.test.compose.ui.tool)
}
